services:
  postgres:
    build:
      context: .
      dockerfile: e2e/Dockerfile.postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: testdb
    expose:
      - 5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  typesense:
    build:
      context: .
      dockerfile: e2e/Dockerfile.typesense
    environment:
      TYPESENSE_API_KEY: 'xyz'
      TYPESENSE_DATA_DIR: /tmp
    expose:
      - 8108
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8108/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  app:
    build:
      context: .
      dockerfile: e2e/Dockerfile.app
    expose:
      - 3001
    environment:
      PG_URI: postgres://postgres:postgres@postgres:5432/testdb
      NODE_ENV: test
      DATABASE_PASSWORD: AAA
      TYPESENSE_HOST: typesense
    depends_on:
      postgres:
        condition: service_healthy
      typesense:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/api/check-db-status || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  playwright:
    build:
      context: .
      dockerfile: e2e/Dockerfile.playwright
    environment:
      BASE_URL: http://app:3001
    depends_on:
      app:
        condition: service_healthy